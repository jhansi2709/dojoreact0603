{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10721051\\\\react\\\\dojoreact0503\\\\src\\\\components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchComments } from '../actions/CommentAction';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comments(props) {\n  _s();\n  useEffect(() => {\n    this.props.fetchComments(1);\n  }, []);\n  componentWillReceiveProps -= nextProps => {\n    if (nextProps.newComment) {\n      this.props.comments.unshift(nextProps.newComment);\n    }\n  };\n  {\n    props.newComment && props.comments.push(props.newComment);\n  }\n  const commentItems = this.props.comments.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: c.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: c.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, c.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), commentItems]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(Comments, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Comments;\nComments.propTypes = {\n  fetchComments: PropTypes.func.isRequired,\n  comments: PropTypes.array.isRequired,\n  newComment: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  comments: state.posts.comments,\n  newComment: state.posts.comment\n});\nexport default connect(mapStateToProps, {\n  fetchComments\n})(Comments);\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchComments","useEffect","jsxDEV","_jsxDEV","Comments","props","_s","componentWillReceiveProps","nextProps","newComment","comments","unshift","push","commentItems","map","c","children","name","fileName","_jsxFileName","lineNumber","columnNumber","body","id","_c","propTypes","func","isRequired","array","object","mapStateToProps","state","posts","comment","$RefreshReg$"],"sources":["C:/Users/10721051/react/dojoreact0503/src/components/Comments.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchComments } from '../actions/CommentAction';\r\nimport { useEffect } from 'react';\r\n\r\nfunction Comments (props) {\r\n\r\n  useEffect(()=> {\r\n    this.props.fetchComments(1);\r\n  },[])\r\n\r\n  componentWillReceiveProps-=(nextProps) =>{\r\n    if (nextProps.newComment) {\r\n      this.props.comments.unshift(nextProps.newComment);\r\n    }\r\n  }\r\n\r\n  {props.newComment && props.comments.push(props.newComment)}\r\n\r\n \r\n    const commentItems = this.props.comments.map(c => (\r\n      <div key={c.id}>\r\n        <h3>{c.name}</h3>\r\n        <p>{c.body}</p>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h1>Comments</h1>\r\n        {commentItems}\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nComments.propTypes = {\r\n    fetchComments: PropTypes.func.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n  newComment: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  comments: state.posts.comments,\r\n  newComment: state.posts.comment\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchComments })(Comments);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAEC,KAAK,EAAE;EAAAC,EAAA;EAExBL,SAAS,CAAC,MAAK;IACb,IAAI,CAACI,KAAK,CAACL,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,EAAC,EAAE,CAAC;EAELO,yBAAyB,IAAGC,SAAS,IAAI;IACvC,IAAIA,SAAS,CAACC,UAAU,EAAE;MACxB,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACH,SAAS,CAACC,UAAU,CAAC;IACnD;EACF,CAAC;EAED;IAACJ,KAAK,CAACI,UAAU,IAAIJ,KAAK,CAACK,QAAQ,CAACE,IAAI,CAACP,KAAK,CAACI,UAAU,CAAC;EAAA;EAGxD,MAAMI,YAAY,GAAG,IAAI,CAACR,KAAK,CAACK,QAAQ,CAACI,GAAG,CAACC,CAAC,iBAC5CZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAKD,CAAC,CAACE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACjBlB,OAAA;MAAAa,QAAA,EAAID,CAAC,CAACO;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA,GAFPN,CAAC,CAACQ,EAAE;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAIf,CAAC;EACF,oBACElB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAChBR,YAAY;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEV;AAACf,EAAA,CA3BMF,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AA8BjBA,QAAQ,CAACqB,SAAS,GAAG;EACjBzB,aAAa,EAAEF,SAAS,CAAC4B,IAAI,CAACC,UAAU;EACxCjB,QAAQ,EAAEZ,SAAS,CAAC8B,KAAK,CAACD,UAAU;EACtClB,UAAU,EAAEX,SAAS,CAAC+B;AACxB,CAAC;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAK;EAChCrB,QAAQ,EAAEqB,KAAK,CAACC,KAAK,CAACtB,QAAQ;EAC9BD,UAAU,EAAEsB,KAAK,CAACC,KAAK,CAACC;AAC1B,CAAC,CAAC;AAEF,eAAelC,OAAO,CAAC+B,eAAe,EAAE;EAAE9B;AAAc,CAAC,CAAC,CAACI,QAAQ,CAAC;AAAC,IAAAoB,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10721051\\\\react\\\\dojoreact0503\\\\src\\\\components\\\\Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/PostAction';\nimport Postform from './Postform';\nimport store from '../store';\nimport { Provider } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Posts extends Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n  render() {\n    const postItems = this.props.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Provider, {\n        store: store,\n        children: [/*#__PURE__*/_jsxDEV(Postform, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), postItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(Posts);","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchPosts","Postform","store","Provider","jsxDEV","_jsxDEV","Posts","componentDidMount","props","componentWillReceiveProps","nextProps","newPost","posts","unshift","render","postItems","map","post","children","title","fileName","_jsxFileName","lineNumber","columnNumber","body","id","propTypes","func","isRequired","array","object","mapStateToProps","state","items","item"],"sources":["C:/Users/10721051/react/dojoreact0503/src/components/Posts.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '../actions/PostAction';\nimport Postform from './Postform';\nimport store from '../store';\nimport { Provider } from 'react-redux';\n\nclass Posts extends Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  render() {\n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}>\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </div>\n    ));\n    return (\n      \n      <div>\n        <Provider store={store}>\n        <Postform />\n        <h1>Posts</h1>\n        {postItems}\n        </Provider>\n      </div>\n    );\n  }\n}\n\nPosts.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.items,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(Posts);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,uBAAuB;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,UAAU;AAC5B,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,SAAST,SAAS,CAAC;EAC5BU,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,KAAK,CAACR,UAAU,EAAE;EACzB;EAEAS,yBAAyBA,CAACC,SAAS,EAAE;IACnC,IAAIA,SAAS,CAACC,OAAO,EAAE;MACrB,IAAI,CAACH,KAAK,CAACI,KAAK,CAACC,OAAO,CAACH,SAAS,CAACC,OAAO,CAAC;IAC7C;EACF;EAEAG,MAAMA,CAAA,EAAG;IACP,MAAMC,SAAS,GAAG,IAAI,CAACP,KAAK,CAACI,KAAK,CAACI,GAAG,CAACC,IAAI,iBACzCZ,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKD,IAAI,CAACE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACrBlB,OAAA;QAAAa,QAAA,EAAID,IAAI,CAACO;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFVN,IAAI,CAACQ,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIlB,CAAC;IACF,oBAEElB,OAAA;MAAAa,QAAA,eACEb,OAAA,CAACF,QAAQ;QAACD,KAAK,EAAEA,KAAM;QAAAgB,QAAA,gBACvBb,OAAA,CAACJ,QAAQ;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACZlB,OAAA;UAAAa,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,EACbR,SAAS;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP;EAEV;AACF;AAEAjB,KAAK,CAACoB,SAAS,GAAG;EAChB1B,UAAU,EAAEF,SAAS,CAAC6B,IAAI,CAACC,UAAU;EACrChB,KAAK,EAAEd,SAAS,CAAC+B,KAAK,CAACD,UAAU;EACjCjB,OAAO,EAAEb,SAAS,CAACgC;AACrB,CAAC;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAK;EAChCpB,KAAK,EAAEoB,KAAK,CAACpB,KAAK,CAACqB,KAAK;EACxBtB,OAAO,EAAEqB,KAAK,CAACpB,KAAK,CAACsB;AACvB,CAAC,CAAC;AAEF,eAAenC,OAAO,CAACgC,eAAe,EAAE;EAAE/B;AAAW,CAAC,CAAC,CAACM,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10721051\\\\react\\\\dojoreact0503\\\\src\\\\components\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchComments } from '../actions/CommentAction';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const a = props => {\n  _s();\n  return /*#__PURE__*/_jsxDEV(Comments, {\n    ...props,\n    params: useParams()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n};\n_s(a, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\nclass Comments extends Component {\n  componentDidMount() {\n    const id = this.props.params;\n    this.props.fetchComments(id);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newComment) {\n      this.props.comments.unshift(nextProps.newComment);\n    }\n  }\n  render() {\n    const commentItems = this.props.comments.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: c.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, c.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), commentItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\nComments.propTypes = {\n  fetchComments: PropTypes.func.isRequired,\n  comments: PropTypes.array.isRequired,\n  newComment: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  comments: state.posts.comments,\n  newComment: state.posts.comment\n});\nexport default connect(mapStateToProps, {\n  fetchComments\n})(Comments);","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchComments","useParams","jsxDEV","_jsxDEV","a","props","_s","Comments","params","fileName","_jsxFileName","lineNumber","columnNumber","componentDidMount","id","componentWillReceiveProps","nextProps","newComment","comments","unshift","render","commentItems","map","c","children","name","body","propTypes","func","isRequired","array","object","mapStateToProps","state","posts","comment"],"sources":["C:/Users/10721051/react/dojoreact0503/src/components/Comments.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchComments } from '../actions/CommentAction';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\nexport const a= (props) => (\r\n  <Comments\r\n      {...props}\r\n      params={useParams()}\r\n  />\r\n);\r\n\r\nclass Comments extends Component {\r\n  componentDidMount() {\r\n    const id=this.props.params;\r\n    this.props.fetchComments(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.newComment) {\r\n      this.props.comments.unshift(nextProps.newComment);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const commentItems = this.props.comments.map(c => (\r\n      <div key={c.id}>\r\n        <h3>{c.name}</h3>\r\n        <p>{c.body}</p>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h1>Comments</h1>\r\n        {commentItems}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nComments.propTypes = {\r\n    fetchComments: PropTypes.func.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n  newComment: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  comments: state.posts.comments,\r\n  newComment: state.posts.comment\r\n});\r\n\r\nexport  default connect(mapStateToProps, { fetchComments })(Comments);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,OAAO,MAAMC,CAAC,GAAGC,KAAK;EAAAC,EAAA;EAAA,oBACpBH,OAAA,CAACI,QAAQ;IAAA,GACDF,KAAK;IACTG,MAAM,EAAEP,SAAS;EAAG;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtB;AAAA,CACH;AAACN,EAAA,CALWF,CAAC;EAAA,QAGAH,SAAS;AAAA;AAIvB,MAAMM,QAAQ,SAASV,SAAS,CAAC;EAC/BgB,iBAAiBA,CAAA,EAAG;IAClB,MAAMC,EAAE,GAAC,IAAI,CAACT,KAAK,CAACG,MAAM;IAC1B,IAAI,CAACH,KAAK,CAACL,aAAa,CAACc,EAAE,CAAC;EAC9B;EAEAC,yBAAyBA,CAACC,SAAS,EAAE;IACnC,IAAIA,SAAS,CAACC,UAAU,EAAE;MACxB,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAACC,OAAO,CAACH,SAAS,CAACC,UAAU,CAAC;IACnD;EACF;EAEAG,MAAMA,CAAA,EAAG;IACP,MAAMC,YAAY,GAAG,IAAI,CAAChB,KAAK,CAACa,QAAQ,CAACI,GAAG,CAACC,CAAC,iBAC5CpB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAKD,CAAC,CAACE;MAAI;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACjBT,OAAA;QAAAqB,QAAA,EAAID,CAAC,CAACG;MAAI;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFPW,CAAC,CAACT,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIf,CAAC;IACF,oBACET,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAI;MAAQ;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EAChBS,YAAY;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT;EAEV;AACF;AAEAL,QAAQ,CAACoB,SAAS,GAAG;EACjB3B,aAAa,EAAEF,SAAS,CAAC8B,IAAI,CAACC,UAAU;EACxCX,QAAQ,EAAEpB,SAAS,CAACgC,KAAK,CAACD,UAAU;EACtCZ,UAAU,EAAEnB,SAAS,CAACiC;AACxB,CAAC;AAED,MAAMC,eAAe,GAAGC,KAAK,KAAK;EAChCf,QAAQ,EAAEe,KAAK,CAACC,KAAK,CAAChB,QAAQ;EAC9BD,UAAU,EAAEgB,KAAK,CAACC,KAAK,CAACC;AAC1B,CAAC,CAAC;AAEF,eAAgBpC,OAAO,CAACiC,eAAe,EAAE;EAAEhC;AAAc,CAAC,CAAC,CAACO,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
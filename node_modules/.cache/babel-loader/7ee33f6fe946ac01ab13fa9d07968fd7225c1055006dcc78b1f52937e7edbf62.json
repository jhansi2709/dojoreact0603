{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10721051\\\\react\\\\dojoreact0503\\\\src\\\\routes\\\\AppRoutes.js\";\nimport React from 'react';\nimport { Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from '../components/Navbar/Navbar';\nimport PostDisplay from '../components/PostDisplay';\nimport CommentsDisplay from '../components/CommentsDisplay';\nimport LoginAuthentication from '../components/LoginAuthentication';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    path1: path1,\n    session,\n    ...rest\n  } = _ref;\n  const isValidSession = props => {\n    if (session.isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this);\n    }\n    //return (<Navigate to={{ pathname: '/login', state: { from: path1 } }} />);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: isValidSession\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 11\n  }, this);\n};\n_c = PrivateRoute;\nconst AppRoutes = (_ref2, _ref3) => {\n  let {\n    session\n  } = _ref2;\n  let {\n    path1\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    pathname: \"/\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/posts\",\n        component: PostDisplay,\n        path1: path1,\n        session: session\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: LoginAuthentication\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/comments\",\n        component: CommentsDisplay,\n        path1: path1,\n        session: session\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n_c2 = AppRoutes;\nexport default AppRoutes;\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"AppRoutes\");","map":{"version":3,"names":["React","Router","Routes","Route","Navigate","Navbar","PostDisplay","CommentsDisplay","LoginAuthentication","useLocation","jsxDEV","_jsxDEV","PrivateRoute","_ref","component","Component","path1","session","rest","isValidSession","props","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","render","_c","AppRoutes","_ref2","_ref3","pathname","children","exact","path","_c2","$RefreshReg$"],"sources":["C:/Users/10721051/react/dojoreact0503/src/routes/AppRoutes.js"],"sourcesContent":["import React from 'react';\r\nimport {Router,Routes, Route, Navigate, } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport PostDisplay from '../components/PostDisplay';\r\nimport CommentsDisplay from '../components/CommentsDisplay';\r\nimport LoginAuthentication from '../components/LoginAuthentication';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ component: Component, path1: path1, session, ...rest}) => {\r\n  \r\n  const isValidSession = (props) => {\r\n    if (session.isAuthenticated) {\r\n      return (<Component {...props} />);\r\n    }\r\n    //return (<Navigate to={{ pathname: '/login', state: { from: path1 } }} />);\r\n  };\r\n  return (<Route {...rest} render={isValidSession} />);\r\n};\r\n\r\nconst AppRoutes = ({ session },{path1}) => (\r\n  \r\n  <Router pathname=\"/\">\r\n     <Navbar />\r\n    <Routes>\r\n                   \r\n    <PrivateRoute exact path=\"/posts\" component={PostDisplay}  path1={path1} session={session}/>\r\n    <Route path=\"/login\" component={LoginAuthentication }/>\r\n    <PrivateRoute path=\"/comments\" component={CommentsDisplay} path1={path1}  session={session}/>\r\n    </Routes>\r\n  </Router>\r\n);\r\n\r\nexport default AppRoutes;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,EAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAS,kBAAkB;AACjE,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,mBAAmB,MAAM,mCAAmC;AACnE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGC,IAAA,IAA6D;EAAA,IAA5D;IAAEC,SAAS,EAAEC,SAAS;IAAEC,KAAK,EAAEA,KAAK;IAAEC,OAAO;IAAE,GAAGC;EAAI,CAAC,GAAAL,IAAA;EAE3E,MAAMM,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIH,OAAO,CAACI,eAAe,EAAE;MAC3B,oBAAQV,OAAA,CAACI,SAAS;QAAA,GAAKK;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAClC;IACA;EACF,CAAC;;EACD,oBAAQd,OAAA,CAACR,KAAK;IAAA,GAAKe,IAAI;IAAEQ,MAAM,EAAEP;EAAe;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACrD,CAAC;AAACE,EAAA,GATIf,YAAY;AAWlB,MAAMgB,SAAS,GAAGA,CAAAC,KAAA,EAAAC,KAAA;EAAA,IAAC;IAAEb;EAAQ,CAAC,GAAAY,KAAA;EAAA,IAAC;IAACb;EAAK,CAAC,GAAAc,KAAA;EAAA,oBAEpCnB,OAAA,CAACV,MAAM;IAAC8B,QAAQ,EAAC,GAAG;IAAAC,QAAA,gBACjBrB,OAAA,CAACN,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACXd,OAAA,CAACT,MAAM;MAAA8B,QAAA,gBAEPrB,OAAA,CAACC,YAAY;QAACqB,KAAK;QAACC,IAAI,EAAC,QAAQ;QAACpB,SAAS,EAAER,WAAY;QAAEU,KAAK,EAAEA,KAAM;QAACC,OAAO,EAAEA;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC5Fd,OAAA,CAACR,KAAK;QAAC+B,IAAI,EAAC,QAAQ;QAACpB,SAAS,EAAEN;MAAqB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACvDd,OAAA,CAACC,YAAY;QAACsB,IAAI,EAAC,WAAW;QAACpB,SAAS,EAAEP,eAAgB;QAACS,KAAK,EAAEA,KAAM;QAAEC,OAAO,EAAEA;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAAA,CACV;AAACU,GAAA,GAXIP,SAAS;AAaf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAQ,GAAA;AAAAC,YAAA,CAAAT,EAAA;AAAAS,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
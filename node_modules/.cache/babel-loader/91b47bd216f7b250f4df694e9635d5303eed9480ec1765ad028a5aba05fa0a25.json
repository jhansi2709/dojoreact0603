{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10721051\\\\react\\\\dojoreact0503\\\\src\\\\components\\\\MyPosts\\\\MyPosts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { fetchPostsSelf } from '../../actions/PostAction';\nimport Postform from '../Postform';\nimport Comments from '../Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyPosts() {\n  componentDidMount = () => {\n    this.props.fetchPostsSelf();\n  };\n  componentWillReceiveProps = nextProps => {\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  };\n  const postItems = this.props.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.navigateTo,\n      children: \"View Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), this.state.active && /*#__PURE__*/_jsxDEV(Comments, {\n      id: post.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 31\n    }, this)]\n  }, post.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), postItems]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n_c = MyPosts;\nMyPosts.propTypes = {\n  fetchPostsSelf: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\nconst mapStateToProps = state => ({\n  posts: state.posts.myps,\n  newPost: state.posts.item\n});\nexport default connect(mapStateToProps, {\n  fetchPostsSelf\n})(MyPosts);\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","Component","PropTypes","connect","Navigate","fetchPostsSelf","Postform","Comments","jsxDEV","_jsxDEV","MyPosts","componentDidMount","props","componentWillReceiveProps","nextProps","newPost","posts","unshift","postItems","map","post","children","title","fileName","_jsxFileName","lineNumber","columnNumber","body","onClick","navigateTo","state","active","id","_c","propTypes","func","isRequired","array","object","mapStateToProps","myps","item","$RefreshReg$"],"sources":["C:/Users/10721051/react/dojoreact0503/src/components/MyPosts/MyPosts.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {Navigate} from 'react-router-dom'\nimport { fetchPostsSelf } from '../../actions/PostAction';\nimport Postform from '../Postform';\nimport Comments from '../Comments';\n\n\nfunction MyPosts() {\n \n  componentDidMount=()=> {\n    this.props.fetchPostsSelf();\n  }\n\n  componentWillReceiveProps=(nextProps) =>{\n    if (nextProps.newPost) {\n      this.props.posts.unshift(nextProps.newPost);\n    }\n  }\n\n  \n  \n    const postItems = this.props.posts.map(post => (\n      <div key={post.id}>\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n        <button onClick={this.navigateTo}>View Comments</button>\n        {this.state.active && <Comments id={post.id} />}\n      </div>\n    ));\n    return (\n      \n      <div>\n        \n        <h1>Posts</h1>\n        {postItems}\n        \n      </div>\n    );\n  }\n\n\nMyPosts.propTypes = {\n  fetchPostsSelf: PropTypes.func.isRequired,\n  posts: PropTypes.array.isRequired,\n  newPost: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  posts: state.posts.myps,\n  newPost: state.posts.item\n});\n\nexport default connect(mapStateToProps, { fetchPostsSelf })(MyPosts);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAASC,cAAc,QAAQ,0BAA0B;AACzD,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnC,SAASC,OAAOA,CAAA,EAAG;EAEjBC,iBAAiB,GAACA,CAAA,KAAK;IACrB,IAAI,CAACC,KAAK,CAACP,cAAc,EAAE;EAC7B,CAAC;EAEDQ,yBAAyB,GAAEC,SAAS,IAAI;IACtC,IAAIA,SAAS,CAACC,OAAO,EAAE;MACrB,IAAI,CAACH,KAAK,CAACI,KAAK,CAACC,OAAO,CAACH,SAAS,CAACC,OAAO,CAAC;IAC7C;EACF,CAAC;EAIC,MAAMG,SAAS,GAAG,IAAI,CAACN,KAAK,CAACI,KAAK,CAACG,GAAG,CAACC,IAAI,iBACzCX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAKD,IAAI,CAACE;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACrBjB,OAAA;MAAAY,QAAA,EAAID,IAAI,CAACO;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClBjB,OAAA;MAAQmB,OAAO,EAAE,IAAI,CAACC,UAAW;MAAAR,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACvD,IAAI,CAACI,KAAK,CAACC,MAAM,iBAAItB,OAAA,CAACF,QAAQ;MAACyB,EAAE,EAAEZ,IAAI,CAACY;IAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,GAJvCN,IAAI,CAACY,EAAE;IAAAT,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAMlB,CAAC;EACF,oBAEEjB,OAAA;IAAAY,QAAA,gBAEEZ,OAAA;MAAAY,QAAA,EAAI;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACbR,SAAS;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEN;AAEV;AAACO,EAAA,GA/BMvB,OAAO;AAkChBA,OAAO,CAACwB,SAAS,GAAG;EAClB7B,cAAc,EAAEH,SAAS,CAACiC,IAAI,CAACC,UAAU;EACzCpB,KAAK,EAAEd,SAAS,CAACmC,KAAK,CAACD,UAAU;EACjCrB,OAAO,EAAEb,SAAS,CAACoC;AACrB,CAAC;AAED,MAAMC,eAAe,GAAGT,KAAK,KAAK;EAChCd,KAAK,EAAEc,KAAK,CAACd,KAAK,CAACwB,IAAI;EACvBzB,OAAO,EAAEe,KAAK,CAACd,KAAK,CAACyB;AACvB,CAAC,CAAC;AAEF,eAAetC,OAAO,CAACoC,eAAe,EAAE;EAAElC;AAAe,CAAC,CAAC,CAACK,OAAO,CAAC;AAAC,IAAAuB,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
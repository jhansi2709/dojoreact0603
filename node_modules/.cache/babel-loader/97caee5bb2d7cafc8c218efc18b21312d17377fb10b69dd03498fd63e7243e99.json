{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10721051\\\\react\\\\dojoreact0503\\\\src\\\\routes\\\\AppRoutes.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Navbar from '../components/Navbar/Navbar';\nimport PostDisplay from '../components/PostDisplay';\nimport CommentsDisplay from '../components/CommentsDisplay';\nimport LoginAuthentication from '../components/LoginAuthentication';\n\n/* const PrivateRoute = ({ component: Component, session, ...rest}) => {\r\n  \r\n  const isValidSession = (props) => {\r\n    if (session.isAuthenticated) {\r\n      return (<Component {...props} />);\r\n    }\r\n    //return (<Navigate to={{ pathname: '/login', state: { from: path1 } }} />);\r\n  };\r\n  return (<Route {...rest} render={isValidSession} />);\r\n}; */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRoutes = (_ref, _ref2) => {\n  let {\n    session\n  } = _ref;\n  let {\n    path1\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n        exact: true,\n        path: \"/posts\",\n        component: PostDisplay,\n        session: session\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: LoginAuthentication\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/comments\",\n        component: CommentsDisplay,\n        session: session\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n_c = AppRoutes;\nexport default AppRoutes;\nvar _c;\n$RefreshReg$(_c, \"AppRoutes\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Navigate","Navbar","PostDisplay","CommentsDisplay","LoginAuthentication","jsxDEV","_jsxDEV","AppRoutes","_ref","_ref2","session","path1","children","fileName","_jsxFileName","lineNumber","columnNumber","PrivateRoute","exact","path","component","_c","$RefreshReg$"],"sources":["C:/Users/10721051/react/dojoreact0503/src/routes/AppRoutes.js"],"sourcesContent":["import React from 'react';\r\nimport {BrowserRouter as Router,Routes, Route, Navigate, } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport PostDisplay from '../components/PostDisplay';\r\nimport CommentsDisplay from '../components/CommentsDisplay';\r\nimport LoginAuthentication from '../components/LoginAuthentication';\r\n\r\n\r\n/* const PrivateRoute = ({ component: Component, session, ...rest}) => {\r\n  \r\n  const isValidSession = (props) => {\r\n    if (session.isAuthenticated) {\r\n      return (<Component {...props} />);\r\n    }\r\n    //return (<Navigate to={{ pathname: '/login', state: { from: path1 } }} />);\r\n  };\r\n  return (<Route {...rest} render={isValidSession} />);\r\n}; */\r\n\r\nconst AppRoutes = ({ session },{path1}) => (\r\n  \r\n  <Router>\r\n     <Navbar />\r\n    <Routes>\r\n                   \r\n    <PrivateRoute exact path=\"/posts\" component={PostDisplay}  session={session}/>\r\n    <Route path=\"/login\" component={LoginAuthentication }/>\r\n    <PrivateRoute path=\"/comments\" component={CommentsDisplay}   session={session}/>\r\n    </Routes>\r\n  </Router>\r\n);\r\n\r\nexport default AppRoutes;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,aAAa,IAAIC,MAAM,EAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAS,kBAAkB;AAClF,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,mBAAmB,MAAM,mCAAmC;;AAGnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAWA,MAAMC,SAAS,GAAGA,CAAAC,IAAA,EAAAC,KAAA;EAAA,IAAC;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAAA,IAAC;IAACG;EAAK,CAAC,GAAAF,KAAA;EAAA,oBAEpCH,OAAA,CAACT,MAAM;IAAAe,QAAA,gBACJN,OAAA,CAACL,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACXV,OAAA,CAACR,MAAM;MAAAc,QAAA,gBAEPN,OAAA,CAACW,YAAY;QAACC,KAAK;QAACC,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAElB,WAAY;QAAEQ,OAAO,EAAEA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eAC9EV,OAAA,CAACP,KAAK;QAACoB,IAAI,EAAC,QAAQ;QAACC,SAAS,EAAEhB;MAAqB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACvDV,OAAA,CAACW,YAAY;QAACE,IAAI,EAAC,WAAW;QAACC,SAAS,EAAEjB,eAAgB;QAAGO,OAAO,EAAEA;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAAA,CACV;AAACK,EAAA,GAXId,SAAS;AAaf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}